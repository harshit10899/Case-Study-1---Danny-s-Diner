CREATE DATABASE DANNY_DINER;

USE DANNY_DINER;

CREATE OR REPLACE TABLE SALES (
  CUSTOMER_ID VARCHAR(1),
  ORDER_DATE DATE,
  PRODUCT_ID INTEGER
);

INSERT INTO SALES
  (CUSTOMER_ID,ORDER_DATE,PRODUCT_ID)
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
  
  CREATE OR REPLACE TABLE MENU (
  PRODUCT_ID INTEGER,
  PRODUCT_NAME VARCHAR(5),
  PRICE INTEGER
);



INSERT INTO MENU
  (PRODUCT_ID, PRODUCT_NAME, PRICE)
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  
  
  CREATE OR REPLACE TABLE MEMBERS (
  CUSTOMER_ID VARCHAR(1),
  JOIN_DATE DATE
);

INSERT INTO MEMBERS
  (CUSTOMER_ID, JOIN_DATE)
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');




SELECT * FROM SALES;

SELECT * FROM MEMBERS;

SELECT * FROM MENU;
  
CREATE OR REPLACE VIEW DANNY_MASTERTABLE AS   
SELECT A.CUSTOMER_ID,A.PRODUCT_ID,A.ORDER_DATE,B.PRODUCT_NAME,B.PRICE,C.JOIN_DATE,
CASE 
WHEN A.ORDER_DATE >= C.JOIN_DATE THEN 'ACTIVE'
WHEN A.ORDER_DATE < C.JOIN_DATE THEN 'NOT_ACTIVE'
ELSE 'MEMBERSHIP_NOT_TAKEN'
END AS MEMBERSHIP_STATUS
FROM SALES as A 
LEFT JOIN MENU as B
on A.PRODUCT_ID = B.PRODUCT_ID
LEFT JOIN MEMBERS AS C
ON A.CUSTOMER_ID = C.CUSTOMER_ID;


SELECT * FROM DANNY_MASTERTABLE;

--What is the total amount each customer spent at the restaurant?

SELECT CUSTOMER_ID,SUM(PRICE) AS TOTAL_AMOUNT_SPENT
FROM DANNY_MASTERTABLE
GROUP BY 1;
  
  
-- How many days has each customer visited the restaurant?

SELECT CUSTOMER_ID,COUNT(DISTINCT(ORDER_DATE)) AS NUMBER_OF_DAYS_VISITED
FROM DANNY_MASTERTABLE 
GROUP BY 1;

-- What was the first item from the menu purchased by each customer?



WITH CTE AS
(
SELECT
		CUSTOMER_ID,PRODUCT_NAME,
		 ROW_NUMBER() OVER ( 
			PARTITION BY CUSTOMER_ID
			ORDER BY ORDER_DATE ASC
		) AS RANK 
	FROM DANNY_MASTERTABLE
)
SELECT * FROM CTE WHERE RANK = 1;

-- What is the most purchased item on the menu and how many times was it purchased by all customers?
    
                                            
SELECT PRODUCT_NAME,COUNT(PRODUCT_ID) AS NUMBER_OF_ORDERS FROM DANNY_MASTERTABLE
GROUP BY 1
ORDER BY 2 DESC;


-- Which item was the most popular for each customer?

 WITH CTE1 AS(
 SELECT CUSTOMER_ID,COUNT(PRODUCT_ID) AS NUMBER_OF_ORDER,PRODUCT_NAME FROM DANNY_MASTERTABLE
 GROUP BY 3,1
 ORDER BY 1,2 DESC),
 CTE2 AS(
 SELECT CUSTOMER_ID,NUMBER_OF_ORDER,PRODUCT_NAME,ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID ORDER BY NUMBER_OF_ORDER DESC ) AS RANK FROM CTE1)
 SELECT CUSTOMER_ID,NUMBER_OF_ORDER,PRODUCT_NAME,RANK FROM CTE2
 WHERE RANK = 1;
 
 
 -- Which item was purchased first by the customer after they became a member?
 
WITH CTE1 AS (
SELECT * FROM DANNY_MASTERTABLE WHERE MEMBERSHIP_STATUS = 'ACTIVE'
),
CTE2 AS(
SELECT *,ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE DESC) AS RANK FROM CTE1)
SELECT * FROM CTE2 WHERE RANK = 1;


-- Which item was purchased just before the customer became a member?


WITH CTE1 AS (
SELECT * FROM DANNY_MASTERTABLE WHERE MEMBERSHIP_STATUS = 'NOT_ACTIVE'
),
CTE2 AS(
SELECT *,ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE DESC) AS RANK FROM CTE1)
SELECT * FROM CTE2 WHERE RANK = 1 ;

-- What is the total items and amount spent for each member before they became a member?


SELECT CUSTOMER_ID,COUNT(PRODUCT_ID) AS TOTAL_ITEM,SUM(PRICE) AS AMOUNT_SPENT FROM DANNY_MASTERTABLE WHERE MEMBERSHIP_STATUS IN('NOT_ACTIVE','MEMBERSHIP_NOT_TAKEN') 
GROUP BY 1;

--- If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

WITH CTE AS(
SELECT CUSTOMER_ID,PRODUCT_NAME,CASE
                   WHEN PRODUCT_NAME = 'SUSHI' THEN PRICE*20
                   ELSE PRICE*10
                   END AS POINTS
 FROM DANNY_MASTERTABLE)
 SELECT CUSTOMER_ID,SUM(POINTS) AS POINTS FROM CTE
 GROUP BY 1;


--In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi -
how many points do customer A and B have at the end of January?


WITH CTE1 AS(
SELECT * FROM DANNY_MASTERTABLE
WHERE MEMBERSHIP_STATUS = 'ACTIVE'
)
SELECT CUSTOMER_ID,SUM(PRICE*20) AS POINTS FROM CTE1 WHERE ORDER_DATE <= JOIN_DATE +7 GROUP BY 1;






